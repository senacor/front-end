name: build

on: push

env:
  GROUP: weaveworksdemos
  COMMIT: ${{ github.sha }}
  REPO: front-end
  DOCKER_REGISTRY: ghcr.io
  DOCKER_NAME: ghcr.io/${{ github.repository }}
  PUSH_DOCKER_IMAGE: true

jobs:
  basic_test:
    # needs: prepare
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      # PSI: Node 4.x??
      - uses: actions/setup-node@v1
        with:
          node-version: "4.x"

      # PSI: npm ci
      - run: npm install
      # PSI: Unit tests
      # Run node tests in docker image
      - name: Test image
        env:
          DOCKER_BUILDKIT: 1
        run: make test


   # PSI: Integration Test:
    #
    # Run simple test against built container
    #- name: Test docker image
    #  env:
    #    DOCKER_BUILDKIT: 1
    #  run: ./test/container.sh
    # - name: Push to Docker Hub
    #   uses: docker/build-push-action@v1
    #   if: startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/master'
    #   with:
    #     username: ${{ secrets.DOCKER_USER }}
    #     password: ${{ secrets.DOCKER_PASS }}
    #     repository: ${{ env.GROUP }}/${{ env.REPO }}
    #     tag_with_ref: true
    #     tag_with_sha: true

  build_docker_image:
    needs: basic_test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      # - uses: actions/setup-node@v1
      #   with:
      #     node-version: "4.x"

      # - run: npm install

      - name: Use branch name as Docker image tag
        if: startsWith(github.ref, 'refs/heads')
        run: |
          echo "DOCKER_TAG=$(echo ${{ github.ref }} | sed -e "s|refs/heads/||g" | sed -e "s|/|.|g")" >> $GITHUB_ENV

      # Not final
      - name: Use 'latest' as Docker tag
        if: github.ref == 'refs/heads/master'
        run: |
          echo "DOCKER_TAG=latest" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GHCR
        uses: docker/login-action@v1
        if: env.PUSH_DOCKER_IMAGE == 'true'
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ${{ env.DOCKER_REGISTRY }}

      - name: Build + push docker image
        uses: docker/build-push-action@v2
        with:
          push: ${{ env.PUSH_DOCKER_IMAGE }}
          tags: ${{ env.DOCKER_NAME }}:${{ env.DOCKER_TAG }}
